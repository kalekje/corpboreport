
%\RequirePackage{luacode}
%\RequirePackage{enumitem}
%\RequirePackage{FP??}
%\RequirePackage{etoolbox}

%! language = Lua
\begin{luacode*}
function AutoPuncItems(s, btwn, seclast, last) -- add btwn and sec and last options
    --texio.write_nl('VVVVV \n'..s) -- troubleshooting
    s, ficount = string.gsub(s, "\\fi ", "") -- for some reason this is injected by enumitem
    if ficount > 0 then
        tex.print('\\toggletrue{autopunc} ')
    end
    local it = '\\item '
    local s_item = '%s*'..it
    btwn = btwn or ';'
    btwn = btwn..' '..it
    seclast = seclast or '; and'
    seclast = seclast..' '..it
    last = last or '.'
    local _, n_matches = string.gsub(s, s_item, "") -- find num items
    s, _ = string.gsub(s, s_item,    seclast,   n_matches) -- replace all 'item' with second last type
    s, _ = string.gsub(s, seclast,   btwn,      n_matches-1) -- replace all 'item' EXCEPT the last with the between
                                                             -- (all but second lines affected)
    s, _ = string.gsub(s, '%s*xxxENDxxx', last) -- add the final char
    s = string.sub(s, #btwn-#it+1, #s)   -- remove added stuff on very first item
    tex.print(s)
end
\end{luacode*}


\def\APbetweenDef{;}
\def\APsecondDef{;\ and}
\def\APlastDef{.}

\NewDocumentCommand{\AutoPuncItems}{ O{\APbetweenDef} O{\APsecondDef} O{\APlastDef} m }{
    \luadirect{AutoPuncItems(
        \luastringN{#4xxxENDxxx},
        \luastringN{#1},
        \luastringN{#2},
        \luastringN{#3}
    )}
}
\NewDocumentEnvironment{AutoPuncList}{  O{\APbetweenDef} O{\APsecondDef} O{\APlastDef} +b }{
   \AutoPuncItems[#1][#2][#3]{#4}
}{}

\usepackage{etoolbox}
\newtoggle{autopunc}
\SetEnumitemKey{autopunc}{
    before*=\toggletrue{autopunc},
    first*=\AutoPuncList,
    after=\endAutoPuncList,
}
\AtEndEnvironment{itemize}{\iftoggle{autopunc}{\fi}{}\togglefalse{autopunc}}
\AtEndEnvironment{enumerate}{\iftoggle{autopunc}{\fi}{}\togglefalse{autopunc}}





% enumerate text           *A +a   {pre} {num} {post} <inbetween>  <between last two>
\NewDocumentCommand{\enumtext}{s t+ O{} m  O{} D<>{, } D<>{#6}}{%
\foreach \n in {1,...,#4}{%
    #3%
    \IfBooleanTF{#1}{\makeAlph{\n}}{\IfBooleanTF{#2}{\makealph{\n}}{\n}}%
    %
    #5%
    \ifnum\n<\fpeval{#4-1}%
    #6%
    \else%
    \ifnum\n<\fpeval{#4}%
    #7%
    \fi%
    \fi%
}}

% iter text, sandwhich in between  [before] {list of text}  [after]
% mandatory argument can be {Kale,Britt,Serena}, or {1,3,...,9}
\NewDocumentCommand{\itertext}{O{} m O{, }}{%
\foreach \n in {#2}{%
    #1\n#3%
}}





%%% do I need to improve regex in autpunc??



%
%function AutoPuncItems(s, btwn, seclast, last) -- add btwn and sec and last options
%    --texio.write_nl('VVVVV \n'..s) -- troubleshooting
%    s, ficount = string.gsub(s, "\\fi ", "") -- for some reason this is injected by enumitem
%    if ficount > 0 then
%        tex.print('\\toggletrue{autopunc} ')
%    end
%    local it = '\\item '
%    local s_item = '%s*'..it
%    btwn = btwn or ';'
%    btwn = btwn..' '..it
%    seclast = seclast or '; and'
%    seclast = seclast..' '..it
%    last = last or '.'
%    local _, n_matches = string.gsub(s, s_item, "") -- find num items
%    s, _ = string.gsub(s, s_item,    seclast,   n_matches) -- replace all 'item' with second last type
%    s, _ = string.gsub(s, seclast,   btwn,      n_matches-1) -- replace all 'item' EXCEPT the last with the between
%                                                             -- (all but second lines affected)
%    s, _ = string.gsub(s, '%s*xxxENDxxx', last) -- add the final char
%    s = string.sub(s, #btwn-#it+1, #s)   -- remove added stuff on very first item
%    tex.print(s)
%end